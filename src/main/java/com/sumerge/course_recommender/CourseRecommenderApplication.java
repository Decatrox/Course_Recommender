package com.sumerge.course_recommender;

import com.sumerge.course_recommender.model.Assessment;
import com.sumerge.course_recommender.model.Author;
import com.sumerge.course_recommender.model.Course;
import com.sumerge.course_recommender.repo.AssessmentRepository;
import com.sumerge.course_recommender.repo.AuthorRepository;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@SpringBootApplication
public class CourseRecommenderApplication {

    public static void main(String[] args) {
        ApplicationContext context = SpringApplication.run(CourseRecommenderApplication.class, args);

//        Course course = context.getBean(Course.class);
//        Author author = context.getBean(Author.class);
//        AuthorRepository authorRepository = context.getBean(AuthorRepository.class);
//        //will change this letter to be autogenerated on creation in courserepo and returned but it's fine for now
//        UUID uuid_author = UUID.fromString("2c01c413-46a9-40b5-bfab-a33774bb3e78");
//        Author hci_author = authorRepository.getAuthor(uuid_author);

       //testing add and view
//        UUID uuid_hci = UUID.randomUUID();
//        course.setId(uuid_hci);
//        course.setName("HCI2");
//        course.setDescription("Fun Course and has an AR Project");
//        course.setCredit(4);
//
////        List<Author> hciauthors = new ArrayList<>();
////        hciauthors.add(hci_author);
////        course.setAuthors(hciauthors);
//
//        CourseService courseService = context.getBean(CourseService.class);
//        courseService.addCourse(course);
//        System.out.println(courseService.viewCourse(uuid_hci));


        //testing update
//        UUID course_to_update = UUID.fromString("f4d0ab43-eebb-4f3e-b18e-2b62f1382027");
//        course.setName("HCI-updated2");
//        course.setDescription("Fun Course and has an AR Project-updated");
//        course.setCredit(5);
//        CourseService courseService = context.getBean(CourseService.class);
//        courseService.updateCourse(course_to_update, course);

        //testing delete
//        UUID course_to_delete = UUID.fromString("f4d0ab43-eebb-4f3e-b18e-2b62f1382027");
//        CourseService courseService = context.getBean(CourseService.class);
//        courseService.deleteCourse(course_to_delete);


//        Assessment assessment1 = context.getBean(Assessment.class);
//        assessment1.setId(UUID.randomUUID());
//        assessment1.setContent("Assessment 1 Content");
//
//        AssessmentRepository repo = context.getBean(AssessmentRepository.class);
//        repo.save(assessment1);
//        System.out.println(repo.findAll());
    }

}

//@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class})
//public class CourseRecommenderApplication {
//
//    public static void main(String[] args) {
//
//        ApplicationContext context = SpringApplication.run(CourseRecommenderApplication.class, args);
//        CourseService service = context.getBean(CourseService.class);
//        service.getRecommendedCourses();
//    }
//
//}
